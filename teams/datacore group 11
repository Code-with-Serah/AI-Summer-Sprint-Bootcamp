from google.colab import files
uploaded = files.upload()

import zipfile
import os
zip_path = list(uploaded.keys())[0]

# Step 3: Set the extraction directory
extract_dir = "/content/TCGA_DICOM"
os.makedirs(extract_dir, exist_ok=True)

# Step 4: Unzip the uploaded file
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    zip_ref.extractall(extract_dir)

print("✅ Unzipped all patient folders into:", extract_dir)

import os

# Updated DICOM root path after local extraction
dicom_root = "/content/TCGA_DICOM"

# Directory where NIfTI files will be saved
nifti_output_dir = "/content/nifti"
os.makedirs(nifti_output_dir, exist_ok=True)

!pip install SimpleITK

import os
import SimpleITK as sitk

nifti_output_dir = "/content/nifti"
os.makedirs(nifti_output_dir, exist_ok=True)

def get_first_dicom_series_path(root_folder):
    # Recursively find a folder that contains .dcm files
    for dirpath, dirnames, filenames in os.walk(root_folder):
        if any(f.lower().endswith('.dcm') for f in filenames):
            return dirpath
    return None

def convert_dicom_to_nifti(input_dicom_folder, output_nifti_path):
    reader = sitk.ImageSeriesReader()
    dicom_names = reader.GetGDCMSeriesFileNames(input_dicom_folder)
    if not dicom_names:
        raise Exception("No DICOM files found.")
    reader.SetFileNames(dicom_names)
    image = reader.Execute()
    sitk.WriteImage(image, output_nifti_path)

# Loop through all patient folders
for pid in os.listdir(extract_dir):
    patient_root = os.path.join(extract_dir, pid)
    if os.path.isdir(patient_root):
        dicom_series_path = get_first_dicom_series_path(patient_root)
        if dicom_series_path:
            output_path = os.path.join(nifti_output_dir, f"{pid}.nii.gz")
            try:
                convert_dicom_to_nifti(dicom_series_path, output_path)
                print(f"[✓] Converted {pid}")
            except Exception as e:
                print(f"[X] Failed {pid}: {e}")
        else:
            print(f"[!] No DICOM found for {pid}")

# Install TotalSegmentator
!pip install totalsegmentator


import os

nifti_dir = "/content/nifti"
output_mask_dir = "/content/masks"
os.makedirs(output_mask_dir, exist_ok=True)

for filename in os.listdir(nifti_dir):
    if filename.endswith(".nii.gz"):
        pid = filename.replace(".nii.gz", "")
        input_path = os.path.join(nifti_dir, filename)
        output_path = os.path.join(output_mask_dir, pid)
        print(f"[▶] Segmenting {pid}...")
        !TotalSegmentator -i "{input_path}" -o "{output_path}" --roi_subset stomach
        print(f"[✓] Done with {pid}")


!pip install pyradiomics

from radiomics import featureextractor
import os
import pandas as pd
import SimpleITK as sitk
from tqdm import tqdm

nifti_output_dir = "/content/nifti"
mask_dir = "/content/masks"
output_csv = "/content/radiomics_features.csv"

# Create extractor with all features enabled
extractor = featureextractor.RadiomicsFeatureExtractor()
extractor.enableAllFeatures()
extractor.settings['label'] = 1  # Change if needed

results = []

for file in tqdm(os.listdir(nifti_output_dir)):
    if file.endswith(".nii.gz"):
        pid = file.replace(".nii.gz", "")
        img_path = os.path.join(nifti_output_dir, file)
        mask_path = os.path.join(mask_dir, pid, "stomach.nii.gz")

        if not os.path.exists(mask_path):
            print(f"[X] Mask not found for {pid}, skipping...")
            continue

        try:
            result = extractor.execute(img_path, mask_path)
            result["PatientID"] = pid
            results.append(result)
        except Exception as e:
            print(f"[X] Failed {pid}: {e}")

if results:
    df = pd.DataFrame(results)
    df.to_csv(output_csv, index=False)
    print(f"[✓] Saved {len(df)} rows to {output_csv}")
else:
    print("[!] No radiomics features extracted.")


# Example: make sure the file is saved in Colab
output_path = "/content/radiomics_features.csv"
df.to_csv(output_path, index=False)  # if you're using pandas
from google.colab import files
files.download("/content/radiomics_features.csv")
